{
	"name": "mingit",
	"displayName": "Minimalist Git",
	"icon": "res/icon.png",
	"description": "View a Git Graph of your repository, and easily perform Git actions from the graph.",
	"categories": ["SCM Providers"],
	"keywords": ["git", "log", "diff", "history", "graph", "branch", "commit", "scm", "flow", "tag"],
	"repository": {
		"type": "git",
		"url": "https://github.com/Muhammad-Mohsen/vsc-minimalist-git"
	},
	"license": "MIT",

	"version": "0.9.0",
	"engines": { "vscode": "^1.95.0" },
	"main": "src/backend/extension.js",
	"activationEvents": [],

	"files": [
		"res/git-empty.txt"
	],

	"contributes": {

		"viewsContainers": {
			"activitybar": [
				{
					"id": "mingit-container",
					"title": "Minimalist Git",
					"icon": "res/img/activitybar-icon.svg"
				}
			]
		},
		"views": {
			"mingit-container": [
				{
					"id": "mingit-main-view",
					"type": "webview",
					"name": "",
					"contextualTitle": "Minimalist Git",
					"visibility": "visible",
					"icon": "res/img/activitybar-icon.svg"
				}
			]
		},

		"menus": {
			"webview/context": [
				{
					"command": "mingit.checkoutCommit",
					"when": "isCommit && webviewId == 'mingit-main-view'",
					"group": "1_commits"
				},
				{
					"command": "mingit.cherrypickCommit",
					"when": "isCommit && webviewId == 'mingit-main-view'",
					"group": "1_commits"
				},
				{
					"command": "mingit.revertCommit",
					"when": "isCommit && webviewId == 'mingit-main-view'",
					"group": "1_commits"
				},
				{
					"command": "mingit.dropCommit",
					"when": "isCommit && webviewId == 'mingit-main-view'",
					"group": "1_commits"
				},

				{
					"command": "mingit.mergeCommitIntoCurrent",
					"when": "isCommit && webviewId == 'mingit-main-view'",
					"group": "2_commits2"
				},
				{
					"command": "mingit.rebaseCurrentOntoCommit",
					"when": "isCommit && webviewId == 'mingit-main-view'",
					"group": "2_commits2"
				},
				{
					"command": "mingit.resetCurrentToCommit",
					"when": "isCommit && webviewId == 'mingit-main-view'",
					"group": "2_commits2"
				},

				{
					"command": "mingit.copyHash",
					"when": "isCommit && webviewId == 'mingit-main-view'",
					"group": "3_commitCopy"
				},
				{
					"command": "mingit.copyMessage",
					"when": "isCommit && webviewId == 'mingit-main-view'",
					"group": "3_commitCopy"
				},

				{
					"command": "mingit.addTag",
					"when": "isCommit && webviewId == 'mingit-main-view'",
					"group": "4_commitTags"
				},
				{
					"command": "mingit.deleteTag",
					"when": "isCommit && tags && webviewId == 'mingit-main-view'",
					"group": "4_commitTags"
				},

				{
					"command": "mingit.applyStash",
					"when": "isStash && webviewId == 'mingit-main-view'",
					"group": "5_stashes"
				},
				{
					"command": "mingit.dropStash",
					"when": "isStash && webviewId == 'mingit-main-view'",
					"group": "5_stashes"
				},

				{
					"command": "mingit.changeAuthor",
					"when": "isOverflow && webviewId == 'mingit-main-view'",
					"group": "5_stashes"
				},
				{
					"command": "mingit.renameBranch",
					"when": "isOverflow && webviewId == 'mingit-main-view'",
					"group": "5_stashes"
				},
				{
					"command": "mingit.resetSoft",
					"when": "isOverflow && webviewId == 'mingit-main-view'",
					"group": "4_reset"
				},
				{
					"command": "mingit.resetHard",
					"when": "isOverflow && webviewId == 'mingit-main-view'",
					"group": "4_reset"
				},

				{
					"command": "mingit.commitAmend",
					"when": "isOverflow && webviewId == 'mingit-main-view'",
					"group": "1_commitActions"
				},
				{
					"command": "mingit.pushForce",
					"when": "isOverflow && webviewId == 'mingit-main-view'",
					"group": "1_commitActions"
				}
			],
			"commandPalette": [
				{
					"command": "mingit.checkoutCommit",
					"when": "false"
				},
				{
					"command": "mingit.cherrypickCommit",
					"when": "false"
				},
				{
					"command": "mingit.revertCommit",
					"when": "false"
				},
				{
					"command": "mingit.dropCommit",
					"when": "false"
				},
				{
					"command": "mingit.mergeCommitIntoCurrent",
					"when": "false"
				},
				{
					"command": "mingit.rebaseCurrentOntoCommit",
					"when": "false"
				},
				{
					"command": "mingit.resetCurrentToCommit",
					"when": "false"
				},
				{
					"command": "mingit.copyHash",
					"when": "false"
				},
				{
					"command": "mingit.copyMessage",
					"when": "false"
				},
				{
					"command": "mingit.addTag",
					"when": "false"
				},
				{
					"command": "mingit.deleteTag",
					"when": "false"
				},
				{
					"command": "mingit.applyStash",
					"when": "false"
				},
				{
					"command": "mingit.dropStash",
					"when": "false"
				},
				{
					"command": "mingit.changeAuthor",
					"when": "false"
				},
				{
					"command": "mingit.renameBranch",
					"when": "false"
				},
				{
					"command": "mingit.resetSoft",
					"when": "false"
				},
				{
					"command": "mingit.resetHard",
					"when": "false"
				},
				{
					"command": "mingit.commitAmend",
					"when": "false"
				},
				{
					"command": "mingit.push",
					"when": "false"
				},
				{
					"command": "mingit.pushForce",
					"when": "false"
				}
			]
		},

		"commands": [
			{
				"command": "mingit.checkoutCommit",
				"title": "Checkout commit",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.cherrypickCommit",
				"title": "Cherrypick commit",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.revertCommit",
				"title": "Revert commit",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.dropCommit",
				"title": "Drop commit",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.mergeCommitIntoCurrent",
				"title": "Merge commit into current branch",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.rebaseCurrentOntoCommit",
				"title": "Rebase current branch onto commit",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.resetCurrentToCommit",
				"title": "Reset current branch to commit",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.copyHash",
				"title": "Copy commit hash",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.copyMessage",
				"title": "Copy commit message",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.addTag",
				"title": "Add tag",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.deleteTag",
				"title": "Delete tag",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.applyStash",
				"title": "Apply stash",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.dropStash",
				"title": "Drop stash",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.changeAuthor",
				"title": "Change author",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.renameBranch",
				"title": "Rename current branch",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.resetSoft",
				"title": "Reset",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.resetHard",
				"title": "Hard reset",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.commitAmend",
				"title": "Amend last commit",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.push",
				"title": "Push",
				"category": "Minimalist Git"
			},
			{
				"command": "mingit.pushForce",
				"title": "Force push",
				"category": "Minimalist Git"
			}
		]
	},

	"scripts": {
		"lint": "eslint .",
		"pretest": "npm run lint",
		"test": "vscode-test"
	},
	"dependencies": {
		"@vscode/codicons": "^0.0.36",
		"simple-git": "^3.27.0"
	},
	"devDependencies": {
		"@types/vscode": "^1.78.0",
		"@types/glob": "^8.1.0",
		"@types/mocha": "^10.0.1",
		"@types/node": "16.x",
		"eslint": "^8.39.0",
		"glob": "^8.1.0",
		"mocha": "^10.2.0",
		"@vscode/test-electron": "^2.3.0"
	}
}
